volumes:
    bloom-postgres-data:
    bloom-redis-data:

x-app-base: &app-base
    build:
        context: ./app
    env_file:
        - .env
    environment:
        - PYTHONPATH=/app
    volumes:
        - ./app:/app:z
    networks:
        - default

services:
    postgres:
        container_name: bloom_postgres-16
        image: postgres:16-alpine
        restart: always
        networks:
            - default
        ports:
            - "5432:5432"
        env_file:
            - .env
        environment:
            - PGDATA=/var/lib/postgresql/data/pgdata
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
            - POSTGRES_USER=${POSTGRES_USER:-postgres}
            - POSTGRES_DB=${POSTGRES_DB:-bloom_db_dev}
        volumes:
            - bloom-postgres-data:/var/lib/postgresql/data/pgdata
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres -d bloom_db_dev"]
            interval: 10s
            timeout: 5s
            retries: 5

    redis:
        container_name: bloom_redis-7
        image: redis:7-alpine
        networks:
            - default
        volumes:
            - bloom-redis-data:/data
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 10s
            timeout: 3s
            retries: 5

    app:
        <<: *app-base
        container_name: bloom_api-1
        ports:
            - "5000:5000"
        command: ./scripts/dev.sh
        depends_on:
            - postgres
            - redis
        healthcheck:
            test: ["CMD-SHELL", "curl -f http://app:5000/health"]
            interval: 1m30s
            timeout: 30s
            retries: 5
            start_period: 30s

    celery_worker:
        <<: *app-base
        container_name: bloom_celery-worker-1
        command: celery -A src.core.celery worker -Q bloom_default_tasks,bloom_recurring_tasks -l INFO
        depends_on:
            app:
                condition: service_healthy
            redis:
                condition: service_healthy

    celery_beat:
        <<: *app-base
        container_name: bloom_celery-beat-1
        command: celery -A src.core.celery beat -l INFO
        depends_on:
            app:
                condition: service_healthy
            redis:
                condition: service_healthy

    mailcatcher:
        container_name: bloom_mailcatcher-1
        image: schickling/mailcatcher
        ports:
            - "1080:1080"
            - "1025:1025"
