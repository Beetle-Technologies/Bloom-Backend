volumes:
  bloom-postgres-data:
  bloom-redis-data:


x-app-base: &app-base
  build:
    context: ./app
  networks:
    - default
  env_file:
    - .env
  volumes:
    - ./app:/app


services:
  postgres:
    container_name: bloom_postgres-16
    image: postgres:16-alpine
    restart: always
    networks:
      - default
    ports:
      - "5432:5432"
    volumes:
      - bloom-postgres-data:/var/lib/postgresql/data/pgdata
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    container_name: bloom_redis-7
    image: redis:7-alpine
    networks:
      - default
    volumes:
      - bloom-redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  app:
    <<: *app-base
    container_name: bloom_api-1
    ports:
      - "8888:80"
      - "80:80"
    command: ./scripts/start.sh
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  celery_worker:
    <<: *app-base
    container_name: bloom_celery-worker-1
    command: celery -A src.core.celery worker -Q bloom_default_tasks,bloom_recurring_tasks -l INFO
    depends_on:
      app: 
        condition: service_healthy

  celery_beat:
    <<: *app-base
    container_name: bloom_celery-beat-1
    command: celery -A src.core.celery beat -l INFO
    depends_on:
      app: 
        condition: service_healthy